# clone darknet repo 
!git clone https://github.com/AlexeyAB/darknet 
# change makefile to have GPU and OPENCV enabled 
%cd darknet 
!sed -i 's/OPENCV=0/OPENCV=1/' Makefile 
!sed -i 's/GPU=0/GPU=1/' Makefile 
!sed -i 's/CUDNN=0/CUDNN=1/' Makefile 
# verify CUDA 
!/usr/local/cuda/bin/nvcc --version 
# make darknet (build) 
!make 
# get yolov3 pretrained coco dataset weights 
!wget https://pjreddie.com/media/files/yolov3.weights 
# define helper functions 
def imShow(path): 
import cv2 
import matplotlib.pyplot as plt 
%matplotlib inline 
image = cv2.imread(path) 
height, width = image.shape[:2] 
resized_image = cv2.resize(image,(3*width, 3*height), interpolation = cv2.INTER_CUBIC) 
fig = plt.gcf() 
fig.set_size_inches(18, 10) 
plt.axis("off") 
plt.imshow(cv2.cvtColor(resized_image, cv2.COLOR_BGR2RGB)) 
plt.show() 
# use this to upload files 
def upload(): 
from google.colab import files 
uploaded = files.upload() 
for name, data in uploaded.items(): 
with open(name, 'wb') as f: 
f.write(data) 
print ('saved file', name) 
# use this to download a file 
def download(path): 
from google.colab import files 
files.download(path) 
# upload an image to root directory (I uploaded an image called street.jpg, you can upload anything) 
%cd .. 
upload() 
# make sure you are in the darknet folder to run the detections command! 
%cd darknet 
!./darknet detect cfg/yolov3.cfg yolov3.weights ../street.jpg 
imShow('predictions.jpg') 
# download cfg to google drive and change its name 
!cp cfg/yolov3.cfg /mydrive/yolov3/yolov3_custom2.cfg 
# upload the custom .cfg back to cloud VM from Google Drive 
!cp /mydrive/yolov3/yolov3_custom.cfg ./cfg 
# upload the custom .cfg back to cloud VM from local machine (uncomment to use) 
#%cd cfg 
#upload() 
#%cd .. 
# upload the obj.names and obj.data files to cloud VM from Google Drive 
!cp /mydrive/yolov3/obj.names ./data 
!cp /mydrive/yolov3/obj.data ./data 
# upload the obj.names and obj.data files to cloud VM from local machine (uncomment to use) 
#%cd data 
#upload() 
#%cd .. 
# upload the generate_train.py script to cloud VM from Google Drive 
!cp /mydrive/yolov3/generate_train.py ./ 
# upload the generate_train.py script to cloud VM from local machine (uncomment to use) 
#upload() 
!python generate_train.py 
# verify train.txt can be seen in our darknet/data folder 
!ls data/ 
# upload pretrained convolutional layer weights 
!wget http://pjreddie.com/media/files/darknet53.conv.74 
# train your custom detector 
!./darknet detector train data/obj.data cfg/yolov3_custom.cfg darknet53.conv.74 -dont_show 
imShow('chart.png') 
!./darknet detector train data/obj.data cfg/yolov3_custom.cfg 
/mydrive/yolov3/backup/yolov3_custom_last.weights -dont_show 
# need to set our custom cfg to test mode 
%cd cfg 
!sed -i 's/batch=64/batch=1/' yolov3_custom.cfg 
!sed -i 's/subdivisions=16/subdivisions=1/' yolov3_custom.cfg 
%cd .. 
# run your custom detector with this command (upload an image to your google drive to test, thresh flag sets 
accuracy that detection must be in order to show it) 
!./darknet detector test data/obj.data cfg/yolov3_custom.cfg 
/mydrive/yolov3/backup/yolov3_custom_last.weights /mydrive/images/safari.jpg -thresh 0.3 
imShow('predictions.jpg')
